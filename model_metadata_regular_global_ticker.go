/*
 * cityfalcon
 *
 * cityfalcon API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MetadataRegularGlobalTicker struct for MetadataRegularGlobalTicker
type MetadataRegularGlobalTicker struct {
	TickerId       *int64  `json:"tickerId,omitempty"`
	TickerName     *string `json:"tickerName,omitempty"`
	StockExchange  *string `json:"stockExchange,omitempty"`
	TickerCountry  *string `json:"tickerCountry,omitempty"`
	DefaultTicker  *bool   `json:"defaultTicker,omitempty"`
	TickerPriority *int64  `json:"tickerPriority,omitempty"`
}

// NewMetadataRegularGlobalTicker instantiates a new MetadataRegularGlobalTicker object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetadataRegularGlobalTicker() *MetadataRegularGlobalTicker {
	this := MetadataRegularGlobalTicker{}
	return &this
}

// NewMetadataRegularGlobalTickerWithDefaults instantiates a new MetadataRegularGlobalTicker object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetadataRegularGlobalTickerWithDefaults() *MetadataRegularGlobalTicker {
	this := MetadataRegularGlobalTicker{}
	return &this
}

// GetTickerId returns the TickerId field value if set, zero value otherwise.
func (o *MetadataRegularGlobalTicker) GetTickerId() int64 {
	if o == nil || o.TickerId == nil {
		var ret int64
		return ret
	}
	return *o.TickerId
}

// GetTickerIdOk returns a tuple with the TickerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataRegularGlobalTicker) GetTickerIdOk() (*int64, bool) {
	if o == nil || o.TickerId == nil {
		return nil, false
	}
	return o.TickerId, true
}

// HasTickerId returns a boolean if a field has been set.
func (o *MetadataRegularGlobalTicker) HasTickerId() bool {
	if o != nil && o.TickerId != nil {
		return true
	}

	return false
}

// SetTickerId gets a reference to the given int64 and assigns it to the TickerId field.
func (o *MetadataRegularGlobalTicker) SetTickerId(v int64) {
	o.TickerId = &v
}

// GetTickerName returns the TickerName field value if set, zero value otherwise.
func (o *MetadataRegularGlobalTicker) GetTickerName() string {
	if o == nil || o.TickerName == nil {
		var ret string
		return ret
	}
	return *o.TickerName
}

// GetTickerNameOk returns a tuple with the TickerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataRegularGlobalTicker) GetTickerNameOk() (*string, bool) {
	if o == nil || o.TickerName == nil {
		return nil, false
	}
	return o.TickerName, true
}

// HasTickerName returns a boolean if a field has been set.
func (o *MetadataRegularGlobalTicker) HasTickerName() bool {
	if o != nil && o.TickerName != nil {
		return true
	}

	return false
}

// SetTickerName gets a reference to the given string and assigns it to the TickerName field.
func (o *MetadataRegularGlobalTicker) SetTickerName(v string) {
	o.TickerName = &v
}

// GetStockExchange returns the StockExchange field value if set, zero value otherwise.
func (o *MetadataRegularGlobalTicker) GetStockExchange() string {
	if o == nil || o.StockExchange == nil {
		var ret string
		return ret
	}
	return *o.StockExchange
}

// GetStockExchangeOk returns a tuple with the StockExchange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataRegularGlobalTicker) GetStockExchangeOk() (*string, bool) {
	if o == nil || o.StockExchange == nil {
		return nil, false
	}
	return o.StockExchange, true
}

// HasStockExchange returns a boolean if a field has been set.
func (o *MetadataRegularGlobalTicker) HasStockExchange() bool {
	if o != nil && o.StockExchange != nil {
		return true
	}

	return false
}

// SetStockExchange gets a reference to the given string and assigns it to the StockExchange field.
func (o *MetadataRegularGlobalTicker) SetStockExchange(v string) {
	o.StockExchange = &v
}

// GetTickerCountry returns the TickerCountry field value if set, zero value otherwise.
func (o *MetadataRegularGlobalTicker) GetTickerCountry() string {
	if o == nil || o.TickerCountry == nil {
		var ret string
		return ret
	}
	return *o.TickerCountry
}

// GetTickerCountryOk returns a tuple with the TickerCountry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataRegularGlobalTicker) GetTickerCountryOk() (*string, bool) {
	if o == nil || o.TickerCountry == nil {
		return nil, false
	}
	return o.TickerCountry, true
}

// HasTickerCountry returns a boolean if a field has been set.
func (o *MetadataRegularGlobalTicker) HasTickerCountry() bool {
	if o != nil && o.TickerCountry != nil {
		return true
	}

	return false
}

// SetTickerCountry gets a reference to the given string and assigns it to the TickerCountry field.
func (o *MetadataRegularGlobalTicker) SetTickerCountry(v string) {
	o.TickerCountry = &v
}

// GetDefaultTicker returns the DefaultTicker field value if set, zero value otherwise.
func (o *MetadataRegularGlobalTicker) GetDefaultTicker() bool {
	if o == nil || o.DefaultTicker == nil {
		var ret bool
		return ret
	}
	return *o.DefaultTicker
}

// GetDefaultTickerOk returns a tuple with the DefaultTicker field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataRegularGlobalTicker) GetDefaultTickerOk() (*bool, bool) {
	if o == nil || o.DefaultTicker == nil {
		return nil, false
	}
	return o.DefaultTicker, true
}

// HasDefaultTicker returns a boolean if a field has been set.
func (o *MetadataRegularGlobalTicker) HasDefaultTicker() bool {
	if o != nil && o.DefaultTicker != nil {
		return true
	}

	return false
}

// SetDefaultTicker gets a reference to the given bool and assigns it to the DefaultTicker field.
func (o *MetadataRegularGlobalTicker) SetDefaultTicker(v bool) {
	o.DefaultTicker = &v
}

// GetTickerPriority returns the TickerPriority field value if set, zero value otherwise.
func (o *MetadataRegularGlobalTicker) GetTickerPriority() int64 {
	if o == nil || o.TickerPriority == nil {
		var ret int64
		return ret
	}
	return *o.TickerPriority
}

// GetTickerPriorityOk returns a tuple with the TickerPriority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataRegularGlobalTicker) GetTickerPriorityOk() (*int64, bool) {
	if o == nil || o.TickerPriority == nil {
		return nil, false
	}
	return o.TickerPriority, true
}

// HasTickerPriority returns a boolean if a field has been set.
func (o *MetadataRegularGlobalTicker) HasTickerPriority() bool {
	if o != nil && o.TickerPriority != nil {
		return true
	}

	return false
}

// SetTickerPriority gets a reference to the given int64 and assigns it to the TickerPriority field.
func (o *MetadataRegularGlobalTicker) SetTickerPriority(v int64) {
	o.TickerPriority = &v
}

func (o MetadataRegularGlobalTicker) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TickerId != nil {
		toSerialize["tickerId"] = o.TickerId
	}
	if o.TickerName != nil {
		toSerialize["tickerName"] = o.TickerName
	}
	if o.StockExchange != nil {
		toSerialize["stockExchange"] = o.StockExchange
	}
	if o.TickerCountry != nil {
		toSerialize["tickerCountry"] = o.TickerCountry
	}
	if o.DefaultTicker != nil {
		toSerialize["defaultTicker"] = o.DefaultTicker
	}
	if o.TickerPriority != nil {
		toSerialize["tickerPriority"] = o.TickerPriority
	}
	return json.Marshal(toSerialize)
}

type NullableMetadataRegularGlobalTicker struct {
	value *MetadataRegularGlobalTicker
	isSet bool
}

func (v NullableMetadataRegularGlobalTicker) Get() *MetadataRegularGlobalTicker {
	return v.value
}

func (v *NullableMetadataRegularGlobalTicker) Set(val *MetadataRegularGlobalTicker) {
	v.value = val
	v.isSet = true
}

func (v NullableMetadataRegularGlobalTicker) IsSet() bool {
	return v.isSet
}

func (v *NullableMetadataRegularGlobalTicker) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetadataRegularGlobalTicker(val *MetadataRegularGlobalTicker) *NullableMetadataRegularGlobalTicker {
	return &NullableMetadataRegularGlobalTicker{value: val, isSet: true}
}

func (v NullableMetadataRegularGlobalTicker) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetadataRegularGlobalTicker) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
