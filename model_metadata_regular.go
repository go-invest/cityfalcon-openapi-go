/*
 * cityfalcon
 *
 * cityfalcon API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MetadataRegular struct for MetadataRegular
type MetadataRegular struct {
	Stocks                            *[]MetadataRegularGlobal `json:"Stocks,omitempty"`
	PrivateCompaniesAndBrands         *[]MetadataRegularGlobal `json:"Private Companies and Brands,omitempty"`
	Organisations                     *[]MetadataRegularGlobal `json:"Organisations,omitempty"`
	Cryptocurrencies                  *[]MetadataRegularGlobal `json:"Cryptocurrencies,omitempty"`
	Cities                            *[]MetadataRegularGlobal `json:"Cities,omitempty"`
	Areas                             *[]MetadataRegularGlobal `json:"Areas,omitempty"`
	States                            *[]MetadataRegularGlobal `json:"States,omitempty"`
	Countries                         *[]MetadataRegularGlobal `json:"Countries,omitempty"`
	MacroTopics                       *[]MetadataRegularGlobal `json:"Macro Topics,omitempty"`
	FinancialTopics                   *[]MetadataRegularGlobal `json:"Financial Topics,omitempty"`
	CorporateBonds                    *[]MetadataRegularGlobal `json:"Corporate Bonds,omitempty"`
	ClosedEndFunds                    *[]MetadataRegularGlobal `json:"Closed-End Funds,omitempty"`
	StateOwnedCompanies               *[]MetadataRegularGlobal `json:"State-Owned Companies,omitempty"`
	RatingsAndResearchFirms           *[]MetadataRegularGlobal `json:"Ratings and Research Firms,omitempty"`
	MajorBusinessAndRelatedActivities *[]MetadataRegularGlobal `json:"Major Business and Related Activities,omitempty"`
	ExchangeTradedFundsETFs           *[]MetadataRegularGlobal `json:"Exchange Traded Funds (ETFs),omitempty"`
}

// NewMetadataRegular instantiates a new MetadataRegular object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetadataRegular() *MetadataRegular {
	this := MetadataRegular{}
	return &this
}

// NewMetadataRegularWithDefaults instantiates a new MetadataRegular object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetadataRegularWithDefaults() *MetadataRegular {
	this := MetadataRegular{}
	return &this
}

// GetStocks returns the Stocks field value if set, zero value otherwise.
func (o *MetadataRegular) GetStocks() []MetadataRegularGlobal {
	if o == nil || o.Stocks == nil {
		var ret []MetadataRegularGlobal
		return ret
	}
	return *o.Stocks
}

// GetStocksOk returns a tuple with the Stocks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataRegular) GetStocksOk() (*[]MetadataRegularGlobal, bool) {
	if o == nil || o.Stocks == nil {
		return nil, false
	}
	return o.Stocks, true
}

// HasStocks returns a boolean if a field has been set.
func (o *MetadataRegular) HasStocks() bool {
	if o != nil && o.Stocks != nil {
		return true
	}

	return false
}

// SetStocks gets a reference to the given []MetadataRegularGlobal and assigns it to the Stocks field.
func (o *MetadataRegular) SetStocks(v []MetadataRegularGlobal) {
	o.Stocks = &v
}

// GetPrivateCompaniesAndBrands returns the PrivateCompaniesAndBrands field value if set, zero value otherwise.
func (o *MetadataRegular) GetPrivateCompaniesAndBrands() []MetadataRegularGlobal {
	if o == nil || o.PrivateCompaniesAndBrands == nil {
		var ret []MetadataRegularGlobal
		return ret
	}
	return *o.PrivateCompaniesAndBrands
}

// GetPrivateCompaniesAndBrandsOk returns a tuple with the PrivateCompaniesAndBrands field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataRegular) GetPrivateCompaniesAndBrandsOk() (*[]MetadataRegularGlobal, bool) {
	if o == nil || o.PrivateCompaniesAndBrands == nil {
		return nil, false
	}
	return o.PrivateCompaniesAndBrands, true
}

// HasPrivateCompaniesAndBrands returns a boolean if a field has been set.
func (o *MetadataRegular) HasPrivateCompaniesAndBrands() bool {
	if o != nil && o.PrivateCompaniesAndBrands != nil {
		return true
	}

	return false
}

// SetPrivateCompaniesAndBrands gets a reference to the given []MetadataRegularGlobal and assigns it to the PrivateCompaniesAndBrands field.
func (o *MetadataRegular) SetPrivateCompaniesAndBrands(v []MetadataRegularGlobal) {
	o.PrivateCompaniesAndBrands = &v
}

// GetOrganisations returns the Organisations field value if set, zero value otherwise.
func (o *MetadataRegular) GetOrganisations() []MetadataRegularGlobal {
	if o == nil || o.Organisations == nil {
		var ret []MetadataRegularGlobal
		return ret
	}
	return *o.Organisations
}

// GetOrganisationsOk returns a tuple with the Organisations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataRegular) GetOrganisationsOk() (*[]MetadataRegularGlobal, bool) {
	if o == nil || o.Organisations == nil {
		return nil, false
	}
	return o.Organisations, true
}

// HasOrganisations returns a boolean if a field has been set.
func (o *MetadataRegular) HasOrganisations() bool {
	if o != nil && o.Organisations != nil {
		return true
	}

	return false
}

// SetOrganisations gets a reference to the given []MetadataRegularGlobal and assigns it to the Organisations field.
func (o *MetadataRegular) SetOrganisations(v []MetadataRegularGlobal) {
	o.Organisations = &v
}

// GetCryptocurrencies returns the Cryptocurrencies field value if set, zero value otherwise.
func (o *MetadataRegular) GetCryptocurrencies() []MetadataRegularGlobal {
	if o == nil || o.Cryptocurrencies == nil {
		var ret []MetadataRegularGlobal
		return ret
	}
	return *o.Cryptocurrencies
}

// GetCryptocurrenciesOk returns a tuple with the Cryptocurrencies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataRegular) GetCryptocurrenciesOk() (*[]MetadataRegularGlobal, bool) {
	if o == nil || o.Cryptocurrencies == nil {
		return nil, false
	}
	return o.Cryptocurrencies, true
}

// HasCryptocurrencies returns a boolean if a field has been set.
func (o *MetadataRegular) HasCryptocurrencies() bool {
	if o != nil && o.Cryptocurrencies != nil {
		return true
	}

	return false
}

// SetCryptocurrencies gets a reference to the given []MetadataRegularGlobal and assigns it to the Cryptocurrencies field.
func (o *MetadataRegular) SetCryptocurrencies(v []MetadataRegularGlobal) {
	o.Cryptocurrencies = &v
}

// GetCities returns the Cities field value if set, zero value otherwise.
func (o *MetadataRegular) GetCities() []MetadataRegularGlobal {
	if o == nil || o.Cities == nil {
		var ret []MetadataRegularGlobal
		return ret
	}
	return *o.Cities
}

// GetCitiesOk returns a tuple with the Cities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataRegular) GetCitiesOk() (*[]MetadataRegularGlobal, bool) {
	if o == nil || o.Cities == nil {
		return nil, false
	}
	return o.Cities, true
}

// HasCities returns a boolean if a field has been set.
func (o *MetadataRegular) HasCities() bool {
	if o != nil && o.Cities != nil {
		return true
	}

	return false
}

// SetCities gets a reference to the given []MetadataRegularGlobal and assigns it to the Cities field.
func (o *MetadataRegular) SetCities(v []MetadataRegularGlobal) {
	o.Cities = &v
}

// GetAreas returns the Areas field value if set, zero value otherwise.
func (o *MetadataRegular) GetAreas() []MetadataRegularGlobal {
	if o == nil || o.Areas == nil {
		var ret []MetadataRegularGlobal
		return ret
	}
	return *o.Areas
}

// GetAreasOk returns a tuple with the Areas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataRegular) GetAreasOk() (*[]MetadataRegularGlobal, bool) {
	if o == nil || o.Areas == nil {
		return nil, false
	}
	return o.Areas, true
}

// HasAreas returns a boolean if a field has been set.
func (o *MetadataRegular) HasAreas() bool {
	if o != nil && o.Areas != nil {
		return true
	}

	return false
}

// SetAreas gets a reference to the given []MetadataRegularGlobal and assigns it to the Areas field.
func (o *MetadataRegular) SetAreas(v []MetadataRegularGlobal) {
	o.Areas = &v
}

// GetStates returns the States field value if set, zero value otherwise.
func (o *MetadataRegular) GetStates() []MetadataRegularGlobal {
	if o == nil || o.States == nil {
		var ret []MetadataRegularGlobal
		return ret
	}
	return *o.States
}

// GetStatesOk returns a tuple with the States field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataRegular) GetStatesOk() (*[]MetadataRegularGlobal, bool) {
	if o == nil || o.States == nil {
		return nil, false
	}
	return o.States, true
}

// HasStates returns a boolean if a field has been set.
func (o *MetadataRegular) HasStates() bool {
	if o != nil && o.States != nil {
		return true
	}

	return false
}

// SetStates gets a reference to the given []MetadataRegularGlobal and assigns it to the States field.
func (o *MetadataRegular) SetStates(v []MetadataRegularGlobal) {
	o.States = &v
}

// GetCountries returns the Countries field value if set, zero value otherwise.
func (o *MetadataRegular) GetCountries() []MetadataRegularGlobal {
	if o == nil || o.Countries == nil {
		var ret []MetadataRegularGlobal
		return ret
	}
	return *o.Countries
}

// GetCountriesOk returns a tuple with the Countries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataRegular) GetCountriesOk() (*[]MetadataRegularGlobal, bool) {
	if o == nil || o.Countries == nil {
		return nil, false
	}
	return o.Countries, true
}

// HasCountries returns a boolean if a field has been set.
func (o *MetadataRegular) HasCountries() bool {
	if o != nil && o.Countries != nil {
		return true
	}

	return false
}

// SetCountries gets a reference to the given []MetadataRegularGlobal and assigns it to the Countries field.
func (o *MetadataRegular) SetCountries(v []MetadataRegularGlobal) {
	o.Countries = &v
}

// GetMacroTopics returns the MacroTopics field value if set, zero value otherwise.
func (o *MetadataRegular) GetMacroTopics() []MetadataRegularGlobal {
	if o == nil || o.MacroTopics == nil {
		var ret []MetadataRegularGlobal
		return ret
	}
	return *o.MacroTopics
}

// GetMacroTopicsOk returns a tuple with the MacroTopics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataRegular) GetMacroTopicsOk() (*[]MetadataRegularGlobal, bool) {
	if o == nil || o.MacroTopics == nil {
		return nil, false
	}
	return o.MacroTopics, true
}

// HasMacroTopics returns a boolean if a field has been set.
func (o *MetadataRegular) HasMacroTopics() bool {
	if o != nil && o.MacroTopics != nil {
		return true
	}

	return false
}

// SetMacroTopics gets a reference to the given []MetadataRegularGlobal and assigns it to the MacroTopics field.
func (o *MetadataRegular) SetMacroTopics(v []MetadataRegularGlobal) {
	o.MacroTopics = &v
}

// GetFinancialTopics returns the FinancialTopics field value if set, zero value otherwise.
func (o *MetadataRegular) GetFinancialTopics() []MetadataRegularGlobal {
	if o == nil || o.FinancialTopics == nil {
		var ret []MetadataRegularGlobal
		return ret
	}
	return *o.FinancialTopics
}

// GetFinancialTopicsOk returns a tuple with the FinancialTopics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataRegular) GetFinancialTopicsOk() (*[]MetadataRegularGlobal, bool) {
	if o == nil || o.FinancialTopics == nil {
		return nil, false
	}
	return o.FinancialTopics, true
}

// HasFinancialTopics returns a boolean if a field has been set.
func (o *MetadataRegular) HasFinancialTopics() bool {
	if o != nil && o.FinancialTopics != nil {
		return true
	}

	return false
}

// SetFinancialTopics gets a reference to the given []MetadataRegularGlobal and assigns it to the FinancialTopics field.
func (o *MetadataRegular) SetFinancialTopics(v []MetadataRegularGlobal) {
	o.FinancialTopics = &v
}

// GetCorporateBonds returns the CorporateBonds field value if set, zero value otherwise.
func (o *MetadataRegular) GetCorporateBonds() []MetadataRegularGlobal {
	if o == nil || o.CorporateBonds == nil {
		var ret []MetadataRegularGlobal
		return ret
	}
	return *o.CorporateBonds
}

// GetCorporateBondsOk returns a tuple with the CorporateBonds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataRegular) GetCorporateBondsOk() (*[]MetadataRegularGlobal, bool) {
	if o == nil || o.CorporateBonds == nil {
		return nil, false
	}
	return o.CorporateBonds, true
}

// HasCorporateBonds returns a boolean if a field has been set.
func (o *MetadataRegular) HasCorporateBonds() bool {
	if o != nil && o.CorporateBonds != nil {
		return true
	}

	return false
}

// SetCorporateBonds gets a reference to the given []MetadataRegularGlobal and assigns it to the CorporateBonds field.
func (o *MetadataRegular) SetCorporateBonds(v []MetadataRegularGlobal) {
	o.CorporateBonds = &v
}

// GetClosedEndFunds returns the ClosedEndFunds field value if set, zero value otherwise.
func (o *MetadataRegular) GetClosedEndFunds() []MetadataRegularGlobal {
	if o == nil || o.ClosedEndFunds == nil {
		var ret []MetadataRegularGlobal
		return ret
	}
	return *o.ClosedEndFunds
}

// GetClosedEndFundsOk returns a tuple with the ClosedEndFunds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataRegular) GetClosedEndFundsOk() (*[]MetadataRegularGlobal, bool) {
	if o == nil || o.ClosedEndFunds == nil {
		return nil, false
	}
	return o.ClosedEndFunds, true
}

// HasClosedEndFunds returns a boolean if a field has been set.
func (o *MetadataRegular) HasClosedEndFunds() bool {
	if o != nil && o.ClosedEndFunds != nil {
		return true
	}

	return false
}

// SetClosedEndFunds gets a reference to the given []MetadataRegularGlobal and assigns it to the ClosedEndFunds field.
func (o *MetadataRegular) SetClosedEndFunds(v []MetadataRegularGlobal) {
	o.ClosedEndFunds = &v
}

// GetStateOwnedCompanies returns the StateOwnedCompanies field value if set, zero value otherwise.
func (o *MetadataRegular) GetStateOwnedCompanies() []MetadataRegularGlobal {
	if o == nil || o.StateOwnedCompanies == nil {
		var ret []MetadataRegularGlobal
		return ret
	}
	return *o.StateOwnedCompanies
}

// GetStateOwnedCompaniesOk returns a tuple with the StateOwnedCompanies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataRegular) GetStateOwnedCompaniesOk() (*[]MetadataRegularGlobal, bool) {
	if o == nil || o.StateOwnedCompanies == nil {
		return nil, false
	}
	return o.StateOwnedCompanies, true
}

// HasStateOwnedCompanies returns a boolean if a field has been set.
func (o *MetadataRegular) HasStateOwnedCompanies() bool {
	if o != nil && o.StateOwnedCompanies != nil {
		return true
	}

	return false
}

// SetStateOwnedCompanies gets a reference to the given []MetadataRegularGlobal and assigns it to the StateOwnedCompanies field.
func (o *MetadataRegular) SetStateOwnedCompanies(v []MetadataRegularGlobal) {
	o.StateOwnedCompanies = &v
}

// GetRatingsAndResearchFirms returns the RatingsAndResearchFirms field value if set, zero value otherwise.
func (o *MetadataRegular) GetRatingsAndResearchFirms() []MetadataRegularGlobal {
	if o == nil || o.RatingsAndResearchFirms == nil {
		var ret []MetadataRegularGlobal
		return ret
	}
	return *o.RatingsAndResearchFirms
}

// GetRatingsAndResearchFirmsOk returns a tuple with the RatingsAndResearchFirms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataRegular) GetRatingsAndResearchFirmsOk() (*[]MetadataRegularGlobal, bool) {
	if o == nil || o.RatingsAndResearchFirms == nil {
		return nil, false
	}
	return o.RatingsAndResearchFirms, true
}

// HasRatingsAndResearchFirms returns a boolean if a field has been set.
func (o *MetadataRegular) HasRatingsAndResearchFirms() bool {
	if o != nil && o.RatingsAndResearchFirms != nil {
		return true
	}

	return false
}

// SetRatingsAndResearchFirms gets a reference to the given []MetadataRegularGlobal and assigns it to the RatingsAndResearchFirms field.
func (o *MetadataRegular) SetRatingsAndResearchFirms(v []MetadataRegularGlobal) {
	o.RatingsAndResearchFirms = &v
}

// GetMajorBusinessAndRelatedActivities returns the MajorBusinessAndRelatedActivities field value if set, zero value otherwise.
func (o *MetadataRegular) GetMajorBusinessAndRelatedActivities() []MetadataRegularGlobal {
	if o == nil || o.MajorBusinessAndRelatedActivities == nil {
		var ret []MetadataRegularGlobal
		return ret
	}
	return *o.MajorBusinessAndRelatedActivities
}

// GetMajorBusinessAndRelatedActivitiesOk returns a tuple with the MajorBusinessAndRelatedActivities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataRegular) GetMajorBusinessAndRelatedActivitiesOk() (*[]MetadataRegularGlobal, bool) {
	if o == nil || o.MajorBusinessAndRelatedActivities == nil {
		return nil, false
	}
	return o.MajorBusinessAndRelatedActivities, true
}

// HasMajorBusinessAndRelatedActivities returns a boolean if a field has been set.
func (o *MetadataRegular) HasMajorBusinessAndRelatedActivities() bool {
	if o != nil && o.MajorBusinessAndRelatedActivities != nil {
		return true
	}

	return false
}

// SetMajorBusinessAndRelatedActivities gets a reference to the given []MetadataRegularGlobal and assigns it to the MajorBusinessAndRelatedActivities field.
func (o *MetadataRegular) SetMajorBusinessAndRelatedActivities(v []MetadataRegularGlobal) {
	o.MajorBusinessAndRelatedActivities = &v
}

// GetExchangeTradedFundsETFs returns the ExchangeTradedFundsETFs field value if set, zero value otherwise.
func (o *MetadataRegular) GetExchangeTradedFundsETFs() []MetadataRegularGlobal {
	if o == nil || o.ExchangeTradedFundsETFs == nil {
		var ret []MetadataRegularGlobal
		return ret
	}
	return *o.ExchangeTradedFundsETFs
}

// GetExchangeTradedFundsETFsOk returns a tuple with the ExchangeTradedFundsETFs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataRegular) GetExchangeTradedFundsETFsOk() (*[]MetadataRegularGlobal, bool) {
	if o == nil || o.ExchangeTradedFundsETFs == nil {
		return nil, false
	}
	return o.ExchangeTradedFundsETFs, true
}

// HasExchangeTradedFundsETFs returns a boolean if a field has been set.
func (o *MetadataRegular) HasExchangeTradedFundsETFs() bool {
	if o != nil && o.ExchangeTradedFundsETFs != nil {
		return true
	}

	return false
}

// SetExchangeTradedFundsETFs gets a reference to the given []MetadataRegularGlobal and assigns it to the ExchangeTradedFundsETFs field.
func (o *MetadataRegular) SetExchangeTradedFundsETFs(v []MetadataRegularGlobal) {
	o.ExchangeTradedFundsETFs = &v
}

func (o MetadataRegular) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Stocks != nil {
		toSerialize["Stocks"] = o.Stocks
	}
	if o.PrivateCompaniesAndBrands != nil {
		toSerialize["Private Companies and Brands"] = o.PrivateCompaniesAndBrands
	}
	if o.Organisations != nil {
		toSerialize["Organisations"] = o.Organisations
	}
	if o.Cryptocurrencies != nil {
		toSerialize["Cryptocurrencies"] = o.Cryptocurrencies
	}
	if o.Cities != nil {
		toSerialize["Cities"] = o.Cities
	}
	if o.Areas != nil {
		toSerialize["Areas"] = o.Areas
	}
	if o.States != nil {
		toSerialize["States"] = o.States
	}
	if o.Countries != nil {
		toSerialize["Countries"] = o.Countries
	}
	if o.MacroTopics != nil {
		toSerialize["Macro Topics"] = o.MacroTopics
	}
	if o.FinancialTopics != nil {
		toSerialize["Financial Topics"] = o.FinancialTopics
	}
	if o.CorporateBonds != nil {
		toSerialize["Corporate Bonds"] = o.CorporateBonds
	}
	if o.ClosedEndFunds != nil {
		toSerialize["Closed-End Funds"] = o.ClosedEndFunds
	}
	if o.StateOwnedCompanies != nil {
		toSerialize["State-Owned Companies"] = o.StateOwnedCompanies
	}
	if o.RatingsAndResearchFirms != nil {
		toSerialize["Ratings and Research Firms"] = o.RatingsAndResearchFirms
	}
	if o.MajorBusinessAndRelatedActivities != nil {
		toSerialize["Major Business and Related Activities"] = o.MajorBusinessAndRelatedActivities
	}
	if o.ExchangeTradedFundsETFs != nil {
		toSerialize["Exchange Traded Funds (ETFs)"] = o.ExchangeTradedFundsETFs
	}
	return json.Marshal(toSerialize)
}

type NullableMetadataRegular struct {
	value *MetadataRegular
	isSet bool
}

func (v NullableMetadataRegular) Get() *MetadataRegular {
	return v.value
}

func (v *NullableMetadataRegular) Set(val *MetadataRegular) {
	v.value = val
	v.isSet = true
}

func (v NullableMetadataRegular) IsSet() bool {
	return v.isSet
}

func (v *NullableMetadataRegular) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetadataRegular(val *MetadataRegular) *NullableMetadataRegular {
	return &NullableMetadataRegular{value: val, isSet: true}
}

func (v NullableMetadataRegular) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetadataRegular) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
