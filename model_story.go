/*
 * cityfalcon
 *
 * cityfalcon API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// Story struct for Story
type Story struct {
	Id                   *int64     `json:"id,omitempty"`
	Uuid                 *string    `json:"uuid,omitempty"`
	UuidTitle            *string    `json:"uuid_title,omitempty"`
	PublishTime          *time.Time `json:"publishTime,omitempty"`
	PublishTimeDiff      *float32   `json:"publishTimeDiff,omitempty"`
	Title                *string    `json:"title,omitempty"`
	Description          *string    `json:"description,omitempty"`
	FullText             *bool      `json:"full_text,omitempty"`
	Category             *string    `json:"category,omitempty"`
	Url                  *string    `json:"url,omitempty"`
	ExpandedUrl          *string    `json:"expanded_url,omitempty"`
	Lang                 *string    `json:"lang,omitempty"`
	DuplicatesCount      *int32     `json:"duplicatesCount,omitempty"`
	ReadCount            *int32     `json:"readCount,omitempty"`
	Paywall              *bool      `json:"paywall,omitempty"`
	RegistrationRequired *bool      `json:"registrationRequired,omitempty"`
	AuthorImageUrl       *string    `json:"author_image_url,omitempty"`
	AuthorScreenName     *string    `json:"author_screen_name,omitempty"`
	AuthorFollowersCount *int32     `json:"author_followers_count,omitempty"`
	FriendsCount         *int32     `json:"friends_count,omitempty"`
	DomainId             *int32     `json:"domain_id,omitempty"`
	DomainName           *string    `json:"domain_name,omitempty"`
	DomainHost           *string    `json:"domain_host,omitempty"`
	DomainCachedLogoUrl  *string    `json:"domain_cached_logo_url,omitempty"`
	ShowPath             *string    `json:"showPath,omitempty"`
	Type                 *string    `json:"type,omitempty"`
	Liked                *bool      `json:"liked,omitempty"`
	Disliked             *bool      `json:"disliked,omitempty"`
	Bookmarked           *bool      `json:"bookmarked,omitempty"`
	SimilarStoriesCount  *int32     `json:"similar_stories_count,omitempty"`
	Score                *float32   `json:"_score,omitempty"`
}

// NewStory instantiates a new Story object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStory() *Story {
	this := Story{}
	return &this
}

// NewStoryWithDefaults instantiates a new Story object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStoryWithDefaults() *Story {
	this := Story{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Story) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Story) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Story) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *Story) SetId(v int64) {
	o.Id = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *Story) GetUuid() string {
	if o == nil || o.Uuid == nil {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Story) GetUuidOk() (*string, bool) {
	if o == nil || o.Uuid == nil {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *Story) HasUuid() bool {
	if o != nil && o.Uuid != nil {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *Story) SetUuid(v string) {
	o.Uuid = &v
}

// GetUuidTitle returns the UuidTitle field value if set, zero value otherwise.
func (o *Story) GetUuidTitle() string {
	if o == nil || o.UuidTitle == nil {
		var ret string
		return ret
	}
	return *o.UuidTitle
}

// GetUuidTitleOk returns a tuple with the UuidTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Story) GetUuidTitleOk() (*string, bool) {
	if o == nil || o.UuidTitle == nil {
		return nil, false
	}
	return o.UuidTitle, true
}

// HasUuidTitle returns a boolean if a field has been set.
func (o *Story) HasUuidTitle() bool {
	if o != nil && o.UuidTitle != nil {
		return true
	}

	return false
}

// SetUuidTitle gets a reference to the given string and assigns it to the UuidTitle field.
func (o *Story) SetUuidTitle(v string) {
	o.UuidTitle = &v
}

// GetPublishTime returns the PublishTime field value if set, zero value otherwise.
func (o *Story) GetPublishTime() time.Time {
	if o == nil || o.PublishTime == nil {
		var ret time.Time
		return ret
	}
	return *o.PublishTime
}

// GetPublishTimeOk returns a tuple with the PublishTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Story) GetPublishTimeOk() (*time.Time, bool) {
	if o == nil || o.PublishTime == nil {
		return nil, false
	}
	return o.PublishTime, true
}

// HasPublishTime returns a boolean if a field has been set.
func (o *Story) HasPublishTime() bool {
	if o != nil && o.PublishTime != nil {
		return true
	}

	return false
}

// SetPublishTime gets a reference to the given time.Time and assigns it to the PublishTime field.
func (o *Story) SetPublishTime(v time.Time) {
	o.PublishTime = &v
}

// GetPublishTimeDiff returns the PublishTimeDiff field value if set, zero value otherwise.
func (o *Story) GetPublishTimeDiff() float32 {
	if o == nil || o.PublishTimeDiff == nil {
		var ret float32
		return ret
	}
	return *o.PublishTimeDiff
}

// GetPublishTimeDiffOk returns a tuple with the PublishTimeDiff field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Story) GetPublishTimeDiffOk() (*float32, bool) {
	if o == nil || o.PublishTimeDiff == nil {
		return nil, false
	}
	return o.PublishTimeDiff, true
}

// HasPublishTimeDiff returns a boolean if a field has been set.
func (o *Story) HasPublishTimeDiff() bool {
	if o != nil && o.PublishTimeDiff != nil {
		return true
	}

	return false
}

// SetPublishTimeDiff gets a reference to the given float32 and assigns it to the PublishTimeDiff field.
func (o *Story) SetPublishTimeDiff(v float32) {
	o.PublishTimeDiff = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *Story) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Story) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *Story) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *Story) SetTitle(v string) {
	o.Title = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Story) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Story) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Story) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Story) SetDescription(v string) {
	o.Description = &v
}

// GetFullText returns the FullText field value if set, zero value otherwise.
func (o *Story) GetFullText() bool {
	if o == nil || o.FullText == nil {
		var ret bool
		return ret
	}
	return *o.FullText
}

// GetFullTextOk returns a tuple with the FullText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Story) GetFullTextOk() (*bool, bool) {
	if o == nil || o.FullText == nil {
		return nil, false
	}
	return o.FullText, true
}

// HasFullText returns a boolean if a field has been set.
func (o *Story) HasFullText() bool {
	if o != nil && o.FullText != nil {
		return true
	}

	return false
}

// SetFullText gets a reference to the given bool and assigns it to the FullText field.
func (o *Story) SetFullText(v bool) {
	o.FullText = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *Story) GetCategory() string {
	if o == nil || o.Category == nil {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Story) GetCategoryOk() (*string, bool) {
	if o == nil || o.Category == nil {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *Story) HasCategory() bool {
	if o != nil && o.Category != nil {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *Story) SetCategory(v string) {
	o.Category = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *Story) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Story) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *Story) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *Story) SetUrl(v string) {
	o.Url = &v
}

// GetExpandedUrl returns the ExpandedUrl field value if set, zero value otherwise.
func (o *Story) GetExpandedUrl() string {
	if o == nil || o.ExpandedUrl == nil {
		var ret string
		return ret
	}
	return *o.ExpandedUrl
}

// GetExpandedUrlOk returns a tuple with the ExpandedUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Story) GetExpandedUrlOk() (*string, bool) {
	if o == nil || o.ExpandedUrl == nil {
		return nil, false
	}
	return o.ExpandedUrl, true
}

// HasExpandedUrl returns a boolean if a field has been set.
func (o *Story) HasExpandedUrl() bool {
	if o != nil && o.ExpandedUrl != nil {
		return true
	}

	return false
}

// SetExpandedUrl gets a reference to the given string and assigns it to the ExpandedUrl field.
func (o *Story) SetExpandedUrl(v string) {
	o.ExpandedUrl = &v
}

// GetLang returns the Lang field value if set, zero value otherwise.
func (o *Story) GetLang() string {
	if o == nil || o.Lang == nil {
		var ret string
		return ret
	}
	return *o.Lang
}

// GetLangOk returns a tuple with the Lang field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Story) GetLangOk() (*string, bool) {
	if o == nil || o.Lang == nil {
		return nil, false
	}
	return o.Lang, true
}

// HasLang returns a boolean if a field has been set.
func (o *Story) HasLang() bool {
	if o != nil && o.Lang != nil {
		return true
	}

	return false
}

// SetLang gets a reference to the given string and assigns it to the Lang field.
func (o *Story) SetLang(v string) {
	o.Lang = &v
}

// GetDuplicatesCount returns the DuplicatesCount field value if set, zero value otherwise.
func (o *Story) GetDuplicatesCount() int32 {
	if o == nil || o.DuplicatesCount == nil {
		var ret int32
		return ret
	}
	return *o.DuplicatesCount
}

// GetDuplicatesCountOk returns a tuple with the DuplicatesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Story) GetDuplicatesCountOk() (*int32, bool) {
	if o == nil || o.DuplicatesCount == nil {
		return nil, false
	}
	return o.DuplicatesCount, true
}

// HasDuplicatesCount returns a boolean if a field has been set.
func (o *Story) HasDuplicatesCount() bool {
	if o != nil && o.DuplicatesCount != nil {
		return true
	}

	return false
}

// SetDuplicatesCount gets a reference to the given int32 and assigns it to the DuplicatesCount field.
func (o *Story) SetDuplicatesCount(v int32) {
	o.DuplicatesCount = &v
}

// GetReadCount returns the ReadCount field value if set, zero value otherwise.
func (o *Story) GetReadCount() int32 {
	if o == nil || o.ReadCount == nil {
		var ret int32
		return ret
	}
	return *o.ReadCount
}

// GetReadCountOk returns a tuple with the ReadCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Story) GetReadCountOk() (*int32, bool) {
	if o == nil || o.ReadCount == nil {
		return nil, false
	}
	return o.ReadCount, true
}

// HasReadCount returns a boolean if a field has been set.
func (o *Story) HasReadCount() bool {
	if o != nil && o.ReadCount != nil {
		return true
	}

	return false
}

// SetReadCount gets a reference to the given int32 and assigns it to the ReadCount field.
func (o *Story) SetReadCount(v int32) {
	o.ReadCount = &v
}

// GetPaywall returns the Paywall field value if set, zero value otherwise.
func (o *Story) GetPaywall() bool {
	if o == nil || o.Paywall == nil {
		var ret bool
		return ret
	}
	return *o.Paywall
}

// GetPaywallOk returns a tuple with the Paywall field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Story) GetPaywallOk() (*bool, bool) {
	if o == nil || o.Paywall == nil {
		return nil, false
	}
	return o.Paywall, true
}

// HasPaywall returns a boolean if a field has been set.
func (o *Story) HasPaywall() bool {
	if o != nil && o.Paywall != nil {
		return true
	}

	return false
}

// SetPaywall gets a reference to the given bool and assigns it to the Paywall field.
func (o *Story) SetPaywall(v bool) {
	o.Paywall = &v
}

// GetRegistrationRequired returns the RegistrationRequired field value if set, zero value otherwise.
func (o *Story) GetRegistrationRequired() bool {
	if o == nil || o.RegistrationRequired == nil {
		var ret bool
		return ret
	}
	return *o.RegistrationRequired
}

// GetRegistrationRequiredOk returns a tuple with the RegistrationRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Story) GetRegistrationRequiredOk() (*bool, bool) {
	if o == nil || o.RegistrationRequired == nil {
		return nil, false
	}
	return o.RegistrationRequired, true
}

// HasRegistrationRequired returns a boolean if a field has been set.
func (o *Story) HasRegistrationRequired() bool {
	if o != nil && o.RegistrationRequired != nil {
		return true
	}

	return false
}

// SetRegistrationRequired gets a reference to the given bool and assigns it to the RegistrationRequired field.
func (o *Story) SetRegistrationRequired(v bool) {
	o.RegistrationRequired = &v
}

// GetAuthorImageUrl returns the AuthorImageUrl field value if set, zero value otherwise.
func (o *Story) GetAuthorImageUrl() string {
	if o == nil || o.AuthorImageUrl == nil {
		var ret string
		return ret
	}
	return *o.AuthorImageUrl
}

// GetAuthorImageUrlOk returns a tuple with the AuthorImageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Story) GetAuthorImageUrlOk() (*string, bool) {
	if o == nil || o.AuthorImageUrl == nil {
		return nil, false
	}
	return o.AuthorImageUrl, true
}

// HasAuthorImageUrl returns a boolean if a field has been set.
func (o *Story) HasAuthorImageUrl() bool {
	if o != nil && o.AuthorImageUrl != nil {
		return true
	}

	return false
}

// SetAuthorImageUrl gets a reference to the given string and assigns it to the AuthorImageUrl field.
func (o *Story) SetAuthorImageUrl(v string) {
	o.AuthorImageUrl = &v
}

// GetAuthorScreenName returns the AuthorScreenName field value if set, zero value otherwise.
func (o *Story) GetAuthorScreenName() string {
	if o == nil || o.AuthorScreenName == nil {
		var ret string
		return ret
	}
	return *o.AuthorScreenName
}

// GetAuthorScreenNameOk returns a tuple with the AuthorScreenName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Story) GetAuthorScreenNameOk() (*string, bool) {
	if o == nil || o.AuthorScreenName == nil {
		return nil, false
	}
	return o.AuthorScreenName, true
}

// HasAuthorScreenName returns a boolean if a field has been set.
func (o *Story) HasAuthorScreenName() bool {
	if o != nil && o.AuthorScreenName != nil {
		return true
	}

	return false
}

// SetAuthorScreenName gets a reference to the given string and assigns it to the AuthorScreenName field.
func (o *Story) SetAuthorScreenName(v string) {
	o.AuthorScreenName = &v
}

// GetAuthorFollowersCount returns the AuthorFollowersCount field value if set, zero value otherwise.
func (o *Story) GetAuthorFollowersCount() int32 {
	if o == nil || o.AuthorFollowersCount == nil {
		var ret int32
		return ret
	}
	return *o.AuthorFollowersCount
}

// GetAuthorFollowersCountOk returns a tuple with the AuthorFollowersCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Story) GetAuthorFollowersCountOk() (*int32, bool) {
	if o == nil || o.AuthorFollowersCount == nil {
		return nil, false
	}
	return o.AuthorFollowersCount, true
}

// HasAuthorFollowersCount returns a boolean if a field has been set.
func (o *Story) HasAuthorFollowersCount() bool {
	if o != nil && o.AuthorFollowersCount != nil {
		return true
	}

	return false
}

// SetAuthorFollowersCount gets a reference to the given int32 and assigns it to the AuthorFollowersCount field.
func (o *Story) SetAuthorFollowersCount(v int32) {
	o.AuthorFollowersCount = &v
}

// GetFriendsCount returns the FriendsCount field value if set, zero value otherwise.
func (o *Story) GetFriendsCount() int32 {
	if o == nil || o.FriendsCount == nil {
		var ret int32
		return ret
	}
	return *o.FriendsCount
}

// GetFriendsCountOk returns a tuple with the FriendsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Story) GetFriendsCountOk() (*int32, bool) {
	if o == nil || o.FriendsCount == nil {
		return nil, false
	}
	return o.FriendsCount, true
}

// HasFriendsCount returns a boolean if a field has been set.
func (o *Story) HasFriendsCount() bool {
	if o != nil && o.FriendsCount != nil {
		return true
	}

	return false
}

// SetFriendsCount gets a reference to the given int32 and assigns it to the FriendsCount field.
func (o *Story) SetFriendsCount(v int32) {
	o.FriendsCount = &v
}

// GetDomainId returns the DomainId field value if set, zero value otherwise.
func (o *Story) GetDomainId() int32 {
	if o == nil || o.DomainId == nil {
		var ret int32
		return ret
	}
	return *o.DomainId
}

// GetDomainIdOk returns a tuple with the DomainId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Story) GetDomainIdOk() (*int32, bool) {
	if o == nil || o.DomainId == nil {
		return nil, false
	}
	return o.DomainId, true
}

// HasDomainId returns a boolean if a field has been set.
func (o *Story) HasDomainId() bool {
	if o != nil && o.DomainId != nil {
		return true
	}

	return false
}

// SetDomainId gets a reference to the given int32 and assigns it to the DomainId field.
func (o *Story) SetDomainId(v int32) {
	o.DomainId = &v
}

// GetDomainName returns the DomainName field value if set, zero value otherwise.
func (o *Story) GetDomainName() string {
	if o == nil || o.DomainName == nil {
		var ret string
		return ret
	}
	return *o.DomainName
}

// GetDomainNameOk returns a tuple with the DomainName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Story) GetDomainNameOk() (*string, bool) {
	if o == nil || o.DomainName == nil {
		return nil, false
	}
	return o.DomainName, true
}

// HasDomainName returns a boolean if a field has been set.
func (o *Story) HasDomainName() bool {
	if o != nil && o.DomainName != nil {
		return true
	}

	return false
}

// SetDomainName gets a reference to the given string and assigns it to the DomainName field.
func (o *Story) SetDomainName(v string) {
	o.DomainName = &v
}

// GetDomainHost returns the DomainHost field value if set, zero value otherwise.
func (o *Story) GetDomainHost() string {
	if o == nil || o.DomainHost == nil {
		var ret string
		return ret
	}
	return *o.DomainHost
}

// GetDomainHostOk returns a tuple with the DomainHost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Story) GetDomainHostOk() (*string, bool) {
	if o == nil || o.DomainHost == nil {
		return nil, false
	}
	return o.DomainHost, true
}

// HasDomainHost returns a boolean if a field has been set.
func (o *Story) HasDomainHost() bool {
	if o != nil && o.DomainHost != nil {
		return true
	}

	return false
}

// SetDomainHost gets a reference to the given string and assigns it to the DomainHost field.
func (o *Story) SetDomainHost(v string) {
	o.DomainHost = &v
}

// GetDomainCachedLogoUrl returns the DomainCachedLogoUrl field value if set, zero value otherwise.
func (o *Story) GetDomainCachedLogoUrl() string {
	if o == nil || o.DomainCachedLogoUrl == nil {
		var ret string
		return ret
	}
	return *o.DomainCachedLogoUrl
}

// GetDomainCachedLogoUrlOk returns a tuple with the DomainCachedLogoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Story) GetDomainCachedLogoUrlOk() (*string, bool) {
	if o == nil || o.DomainCachedLogoUrl == nil {
		return nil, false
	}
	return o.DomainCachedLogoUrl, true
}

// HasDomainCachedLogoUrl returns a boolean if a field has been set.
func (o *Story) HasDomainCachedLogoUrl() bool {
	if o != nil && o.DomainCachedLogoUrl != nil {
		return true
	}

	return false
}

// SetDomainCachedLogoUrl gets a reference to the given string and assigns it to the DomainCachedLogoUrl field.
func (o *Story) SetDomainCachedLogoUrl(v string) {
	o.DomainCachedLogoUrl = &v
}

// GetShowPath returns the ShowPath field value if set, zero value otherwise.
func (o *Story) GetShowPath() string {
	if o == nil || o.ShowPath == nil {
		var ret string
		return ret
	}
	return *o.ShowPath
}

// GetShowPathOk returns a tuple with the ShowPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Story) GetShowPathOk() (*string, bool) {
	if o == nil || o.ShowPath == nil {
		return nil, false
	}
	return o.ShowPath, true
}

// HasShowPath returns a boolean if a field has been set.
func (o *Story) HasShowPath() bool {
	if o != nil && o.ShowPath != nil {
		return true
	}

	return false
}

// SetShowPath gets a reference to the given string and assigns it to the ShowPath field.
func (o *Story) SetShowPath(v string) {
	o.ShowPath = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *Story) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Story) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *Story) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *Story) SetType(v string) {
	o.Type = &v
}

// GetLiked returns the Liked field value if set, zero value otherwise.
func (o *Story) GetLiked() bool {
	if o == nil || o.Liked == nil {
		var ret bool
		return ret
	}
	return *o.Liked
}

// GetLikedOk returns a tuple with the Liked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Story) GetLikedOk() (*bool, bool) {
	if o == nil || o.Liked == nil {
		return nil, false
	}
	return o.Liked, true
}

// HasLiked returns a boolean if a field has been set.
func (o *Story) HasLiked() bool {
	if o != nil && o.Liked != nil {
		return true
	}

	return false
}

// SetLiked gets a reference to the given bool and assigns it to the Liked field.
func (o *Story) SetLiked(v bool) {
	o.Liked = &v
}

// GetDisliked returns the Disliked field value if set, zero value otherwise.
func (o *Story) GetDisliked() bool {
	if o == nil || o.Disliked == nil {
		var ret bool
		return ret
	}
	return *o.Disliked
}

// GetDislikedOk returns a tuple with the Disliked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Story) GetDislikedOk() (*bool, bool) {
	if o == nil || o.Disliked == nil {
		return nil, false
	}
	return o.Disliked, true
}

// HasDisliked returns a boolean if a field has been set.
func (o *Story) HasDisliked() bool {
	if o != nil && o.Disliked != nil {
		return true
	}

	return false
}

// SetDisliked gets a reference to the given bool and assigns it to the Disliked field.
func (o *Story) SetDisliked(v bool) {
	o.Disliked = &v
}

// GetBookmarked returns the Bookmarked field value if set, zero value otherwise.
func (o *Story) GetBookmarked() bool {
	if o == nil || o.Bookmarked == nil {
		var ret bool
		return ret
	}
	return *o.Bookmarked
}

// GetBookmarkedOk returns a tuple with the Bookmarked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Story) GetBookmarkedOk() (*bool, bool) {
	if o == nil || o.Bookmarked == nil {
		return nil, false
	}
	return o.Bookmarked, true
}

// HasBookmarked returns a boolean if a field has been set.
func (o *Story) HasBookmarked() bool {
	if o != nil && o.Bookmarked != nil {
		return true
	}

	return false
}

// SetBookmarked gets a reference to the given bool and assigns it to the Bookmarked field.
func (o *Story) SetBookmarked(v bool) {
	o.Bookmarked = &v
}

// GetSimilarStoriesCount returns the SimilarStoriesCount field value if set, zero value otherwise.
func (o *Story) GetSimilarStoriesCount() int32 {
	if o == nil || o.SimilarStoriesCount == nil {
		var ret int32
		return ret
	}
	return *o.SimilarStoriesCount
}

// GetSimilarStoriesCountOk returns a tuple with the SimilarStoriesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Story) GetSimilarStoriesCountOk() (*int32, bool) {
	if o == nil || o.SimilarStoriesCount == nil {
		return nil, false
	}
	return o.SimilarStoriesCount, true
}

// HasSimilarStoriesCount returns a boolean if a field has been set.
func (o *Story) HasSimilarStoriesCount() bool {
	if o != nil && o.SimilarStoriesCount != nil {
		return true
	}

	return false
}

// SetSimilarStoriesCount gets a reference to the given int32 and assigns it to the SimilarStoriesCount field.
func (o *Story) SetSimilarStoriesCount(v int32) {
	o.SimilarStoriesCount = &v
}

// GetScore returns the Score field value if set, zero value otherwise.
func (o *Story) GetScore() float32 {
	if o == nil || o.Score == nil {
		var ret float32
		return ret
	}
	return *o.Score
}

// GetScoreOk returns a tuple with the Score field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Story) GetScoreOk() (*float32, bool) {
	if o == nil || o.Score == nil {
		return nil, false
	}
	return o.Score, true
}

// HasScore returns a boolean if a field has been set.
func (o *Story) HasScore() bool {
	if o != nil && o.Score != nil {
		return true
	}

	return false
}

// SetScore gets a reference to the given float32 and assigns it to the Score field.
func (o *Story) SetScore(v float32) {
	o.Score = &v
}

func (o Story) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Uuid != nil {
		toSerialize["uuid"] = o.Uuid
	}
	if o.UuidTitle != nil {
		toSerialize["uuid_title"] = o.UuidTitle
	}
	if o.PublishTime != nil {
		toSerialize["publishTime"] = o.PublishTime
	}
	if o.PublishTimeDiff != nil {
		toSerialize["publishTimeDiff"] = o.PublishTimeDiff
	}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.FullText != nil {
		toSerialize["full_text"] = o.FullText
	}
	if o.Category != nil {
		toSerialize["category"] = o.Category
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.ExpandedUrl != nil {
		toSerialize["expanded_url"] = o.ExpandedUrl
	}
	if o.Lang != nil {
		toSerialize["lang"] = o.Lang
	}
	if o.DuplicatesCount != nil {
		toSerialize["duplicatesCount"] = o.DuplicatesCount
	}
	if o.ReadCount != nil {
		toSerialize["readCount"] = o.ReadCount
	}
	if o.Paywall != nil {
		toSerialize["paywall"] = o.Paywall
	}
	if o.RegistrationRequired != nil {
		toSerialize["registrationRequired"] = o.RegistrationRequired
	}
	if o.AuthorImageUrl != nil {
		toSerialize["author_image_url"] = o.AuthorImageUrl
	}
	if o.AuthorScreenName != nil {
		toSerialize["author_screen_name"] = o.AuthorScreenName
	}
	if o.AuthorFollowersCount != nil {
		toSerialize["author_followers_count"] = o.AuthorFollowersCount
	}
	if o.FriendsCount != nil {
		toSerialize["friends_count"] = o.FriendsCount
	}
	if o.DomainId != nil {
		toSerialize["domain_id"] = o.DomainId
	}
	if o.DomainName != nil {
		toSerialize["domain_name"] = o.DomainName
	}
	if o.DomainHost != nil {
		toSerialize["domain_host"] = o.DomainHost
	}
	if o.DomainCachedLogoUrl != nil {
		toSerialize["domain_cached_logo_url"] = o.DomainCachedLogoUrl
	}
	if o.ShowPath != nil {
		toSerialize["showPath"] = o.ShowPath
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Liked != nil {
		toSerialize["liked"] = o.Liked
	}
	if o.Disliked != nil {
		toSerialize["disliked"] = o.Disliked
	}
	if o.Bookmarked != nil {
		toSerialize["bookmarked"] = o.Bookmarked
	}
	if o.SimilarStoriesCount != nil {
		toSerialize["similar_stories_count"] = o.SimilarStoriesCount
	}
	if o.Score != nil {
		toSerialize["_score"] = o.Score
	}
	return json.Marshal(toSerialize)
}

type NullableStory struct {
	value *Story
	isSet bool
}

func (v NullableStory) Get() *Story {
	return v.value
}

func (v *NullableStory) Set(val *Story) {
	v.value = val
	v.isSet = true
}

func (v NullableStory) IsSet() bool {
	return v.isSet
}

func (v *NullableStory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStory(val *Story) *NullableStory {
	return &NullableStory{value: val, isSet: true}
}

func (v NullableStory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
